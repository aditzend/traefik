version: "3.3"

services:

  traefik:
    image: "traefik:v2.4"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik-public"
      #- '--providers.docker.defaultRule=Host(`{{ index .Labels "com.docker.stack.service.host" }}`)'
      - '--providers.docker.defaultRule=PathPrefix(`/{{ index .Labels "com.docker.stack.namespace" }}{{ index .Labels "com.docker.stack.service.path" }}`)'
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web-secure.address=:443"
      #- "--providers.docker.useBindPortIP=true"
      #- "--traefik.http.middlewares.my-header.headers.customresponseheaders.X-Custom-Response-Header=cinema"
      #- "--providers.docker.swarmMode=true"
       # Settle the autentification method to http challenge
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge=true"
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge.entrypoint=web"
      # Uncomment this to get a fake certificate when testing
      #- "--certificatesresolvers.myhttpchallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      # Settle letsencrypt as the certificate provider
      - "--certificatesresolvers.myhttpchallenge.acme.email=alex@saia.ar"
      - "--certificatesresolvers.myhttpchallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
      - target: 8080
        published: 38080
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      - net
  

  whoami:
    image: "traefik/whoami"
    labels:
        - "com.docker.stack.service.path=/whoami"
        - "traefik.enable=true"
        #- "traefik.http.middlewares.foo-add-prefix.addprefix.prefix=/foo"
        #- "traefik.http.services.${BOT_NAME-pi_bot}-whoami.loadbalancer.server.port=80"
    networks:
      - net
      
volumes:
  letsencrypt:
networks:
  net:
    name: traefik-public
    external: true
    
      
